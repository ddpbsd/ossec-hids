language: c

notifications:
  email:
    - ddpbsd@gmail.com

env:
- OSSEC_TYPE=server PRELUDE=no ZEROMQ=no
- OSSEC_TYPE=server ZLIB_SYSTEM=yes LUA_ENABLE=no
- OSSEC_TYPE=server USE_SQLITE=yes USE_LIBSODIUM=yes
- OSSEC_TYPE=local GEOIP=no
- OSSEC_TYPE=hybrid GEOIP=no
- OSSEC_TYPE=agent GEOIP=no
- OSSEC_TYPE=test
- OSSEC_TYPE=server RULES=test
- OSSEC_TYPE=server SCAN=yes
- OSSEC_TYPE=agent SCAN=yes


compiler:
- gcc
- clang


matrix:
  fast_finish: true
  exclude:
    - compiler: clang
      env: OSSEC_TYPE=server RULES=test
    - compiler: gcc
      env: SCAN=yes



before_script:
- sudo add-apt-repository "deb http://archive.ubuntu.com/ubuntu $(lsb_release -sc) universe"
- sudo apt-get update -qq
- sudo apt-get install -y libevent-dev
- ( wget https://ftp.pcre.org/pub/pcre/pcre2-10.32.tar.gz
  && tar xzf pcre2-10.32.tar.gz -C src/external )
- if [[ "${GEOIP}" == "yes"  ]]; then ( sudo apt-get install geoip-bin geoip-database libgeoip-dev libgeoip1 ); fi
- if [[ "${PRELUDE}" == "yes" ]]; then ( sudo apt-get install libprelude-dev ); fi
- if [[ "${ZEROMQ}" == "yes" ]]; then ( sudo apt-get install libzmq3-dev libczmq3-dev
  && wget https://github.com/zeromq/czmq/archive/v2.2.0.tar.gz
  && tar xfz v2.2.0.tar.gz && cd czmq-2.2.0/ && ./autogen.sh
  && ./configure && make all -j && sudo make install
  ); fi
- if [[ "${USE_SQLITE}" == "yes" ]]; then ( sudo apt-get install libsqlite3-dev sqlite3 ); fi
- if [[ "${USE_LIBSODIUM}" == "yes" ]]; then ( sudo apt-get update && sudo apt-get install libsodium-dev libsodium18 ); fi
- if [[ "${OSSEC_TYPE}" == "test" ]]; then ( sudo apt-get update && sudo apt-get install check valgrind ); fi
- if [[ "${OSSEC_TYPE}" == "server" ]]; then ( git clone http://github.com/ddpbsd/ossec-scan.git ossec-scan ); fi


script:
- COMMAND="V=1 TARGET=${OSSEC_TYPE}"
  && if [[ "${GEOIP}" = "yes" ]]; then COMMAND="${COMMAND} USE_GEOIP=1"; fi
  && if [[ "${PRELUDE}" = "yes" ]]; then COMMAND="${COMMAND} USE_PRELUDE=1"; fi
  && if [[ "${ZEROMQ}" = "yes" ]]; then COMMAND="${COMMAND} USE_ZEROMQ=1"; fi
  && if [[ "${OSSEC_TYPE}" = "test" ]]; then COMMAND="${COMMAND} USE_PCRE2_JIT=0"; fi
  && ( cd src/
     && make --warn-undefined-variables ${COMMAND} settings
     && make --warn-undefined-variables ${COMMAND} external -j
     && make --warn-undefined-variables ${COMMAND} -j )
  && if ! [[ "${OSSEC_TYPE}" = "test" || "${OSSEC_TYPE}" = "winagent" || "${OSSEC_TYPE}" = "scan" ]]; then ( cd src/ && sudo make --warn-undefined-variables ${COMMAND} install ) fi

- if [[ "${OSSEC_TYPE}" == "test" ]]; then ( cd src/ && make --warn-undefined-variables test_valgrind ) fi
- if [[ "${RULES}" == "test" ]]; then ( cd src/ && sudo make V=1 TARGET=server test-rules ) fi
- if [[ "${SCAN}" == "yes" && "${OSSEC_TYPE}" == "server" ]]; then ( cd src/ && scan-build -o ../ossec-scan/scans/testing/${OSSEC_TYPE} make ${COMMAND} USE_LIBSODIUM=y ) fi 


after_success:
- if [[ "$TRAVIS_BRANCH" == "testing" ]]; then (cd ../ossec-scan && git config user.email travis-ci@travis && git config user.name  "Travis-CI" && git add . && git commit -m "deployed to github" && git push --force --quiet https://$GH_TOKEN@github.com/ddpbsd/ossec-scan.git); fi

